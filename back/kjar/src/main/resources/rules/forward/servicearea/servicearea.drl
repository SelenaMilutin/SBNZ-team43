package rules.forward.servicearea;
import java.time.LocalDateTime;
import com.ftn.sbnz.model.user.Client;
import com.ftn.sbnz.model.servicearea.ServiceArea;
import com.ftn.sbnz.model.servicearea.IServiceAreaService;

global IServiceAreaService serviceAreaService;

rule "just anyhting"
when
then
 System.out.println("Always Fire Rule has fired.");
end

rule "Service Area Set For Client"
when
    $client: Client( $serviceArea: serviceArea != null && previousServiceArea == null )
then
    System.out.println("Service area is set to: " + $serviceArea.getId());
    $serviceArea.incrementCurrentCapacity();
    update($serviceArea);
    $client.setPreviousServiceArea($serviceArea);
    update($client)
//    modify($serviceArea){incrementCurrentCapacity()};
    serviceAreaService.notifyClientAboutServiceAreaChange($client);
end

rule "Service Area Removed For Client"
when
    $client: Client( serviceArea == null, $previousServiceArea: previousServiceArea != null )
    Client( this != $client, serviceArea == null )
then
    System.out.println("Service area has been set to null");

    $previousServiceArea.decrementCurrentCapacity();
//    modify($previousServiceArea){decrementCurrentCapacity()};
    $client.setPreviousServiceArea(null);
    update($client);
//    modify($client){setPreviousServiceArea(null)}
    serviceAreaService.notifyClientAboutServiceAreaChange($client);
end

rule "Service Area Became Unavailable" salience 10
when
    $sa: ServiceArea(availableFlag == false && lastUnavailableTimestamp == null)
then
    System.out.println("Service area became unavailable: " + $sa.getId());
    $sa.setLastUnavailableTimestamp(LocalDateTime.now());
    update($sa);
//    modify($sa){setLastUnavailableTimestamp(LocalDateTime.now())}
    System.out.println($sa.getLastUnavailableTimestamp());
    serviceAreaService.notifyUsersAboutUnavailableServiceArea($sa);
end

rule "Notify Admin If More Than 10% Users Have Unavailable Service Areas And Activate Backup Areas" salience 9
when
    $totalClients: Number() from accumulate(
        $client: Client(serviceArea != null),
        count($client)
    )
    $unavailableClients: Number() from accumulate(
        $client: Client(serviceArea != null && serviceArea.availableFlag == false),
        count($client)
    )
    eval( ($unavailableClients.doubleValue() / $totalClients.doubleValue()) > 0.10 )
then
    System.out.println("More than 10% of users have unavailable service areas.");
    serviceAreaService.notifyAdminAboutUnavailableServiceAreas();
    serviceAreaService.activateBackupServiceAreas();
end

rule "Service Area Is Unavailable For More Than 1 Minutes" salience 11
when
    $sa: ServiceArea(availableFlag == false && lastUnavailableTimestamp != null && lastUnavailableTimestamp.isBefore(LocalDateTime.now().minusMinutes(1)))
then
    System.out.println("Service area unavailable for more than 1 minutes: " + $sa.getId());
    serviceAreaService.moveClientsToAvailableServiceAreasWithCapacityBelow90Percent($sa);
end