package rules.forward.servicearea;

import java.time.LocalDateTime;
import java.util.List;
import com.ftn.sbnz.model.user.Client;
import com.ftn.sbnz.model.servicearea.ServiceArea;
import com.ftn.sbnz.model.servicearea.IServiceAreaService;

global IServiceAreaService serviceAreaService;

rule "just anyhting"
when
then
 System.out.println("Always Fire Rule has fired.");
end

rule "Service Area Set For Client" salience 20
when
    $client: Client( $serviceArea: serviceArea != null && previousServiceArea == null )
then
    System.out.println("Service area is set to: " + $serviceArea.getId());
//    $client.setPreviousServiceArea($serviceArea);
//    update($client);
//    modify($client){setPreviousServiceArea($serviceArea)}
    modify($serviceArea){incrementCurrentCapacity()};
    serviceAreaService.notifyClientAboutServiceAreaChange($client);
end

rule "Service Area Removed For Client"
when
    $client: Client( serviceArea == null, $previousServiceArea: previousServiceArea != null )
    Client( this != $client, serviceArea == null )
then
    System.out.println("Service area has been set to null");

    $previousServiceArea.decrementCurrentCapacity();
//    modify($previousServiceArea){decrementCurrentCapacity()};
    $client.setPreviousServiceArea(null);
//    update($client);
    modify($client){setPreviousServiceArea(null)}
    serviceAreaService.notifyClientAboutServiceAreaChange($client);
end

rule "Service Area Became Unavailable" salience 13
when
    $sa: ServiceArea(availableFlag == false && lastUnavailableTimestamp == null)
then
    System.out.println("Service area became unavailable: " + $sa.getId());
    modify($sa){setLastUnavailableTimestamp(LocalDateTime.now())};
    serviceAreaService.notifyUsersAboutUnavailableServiceArea($sa);
end

rule "Notify Admin If More Than 10% Users Have Unavailable Service Areas And Activate Backup Areas" salience 12
when
    $totalClients: Number() from accumulate(
        $client: Client(serviceArea != null),
        count($client)
    )
    $unavailableClients: Number() from accumulate(
        $client: Client(serviceArea != null && serviceArea.availableFlag == false),
        count($client)
    )
    eval( ($unavailableClients.doubleValue() / $totalClients.doubleValue()) > 0.10 )
then
    System.out.println("More than 10% of users have unavailable service areas.");
    serviceAreaService.notifyAdminAboutUnavailableServiceAreas();
    serviceAreaService.toggleActiveFlagForBackupServiceAreas(true);
end

rule "Service Area Is Unavailable For More Than 1 Minutes" salience 11
when
    $sa: ServiceArea(availableFlag == false && lastUnavailableTimestamp != null && lastUnavailableTimestamp.isBefore(LocalDateTime.now().minusMinutes(1)))
then
    System.out.println("Service area unavailable for more than 1 minutes: " + $sa.getId());
    serviceAreaService.moveClientsToAvailableServiceAreasWithCapacityBelow90Percent($sa);
end

rule "All Areas Available And With Capacity Under 70%"
when
    $activeServiceAreas: List() from accumulate(
        $sa: ServiceArea(backupFlag == false, availableFlag == true, (currentCapacity / maximumCapacity) <= 0.7),
        collectList($sa)
    )
    $totalNonBackupServiceAreas: Number() from accumulate(
        $sa: ServiceArea(backupFlag == false),
        count($sa)
    )
    eval($totalNonBackupServiceAreas.intValue() == $activeServiceAreas.size())
then
    System.out.println("All active non-backup service areas have capacity under 70%.");
    serviceAreaService.toggleActiveFlagForBackupServiceAreas(false);
end
