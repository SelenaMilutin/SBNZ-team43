package rules.cep;

import com.ftn.sbnz.model.complaint.Complaint;
import com.ftn.sbnz.model.packages.Packages;
import com.ftn.sbnz.model.complaint.service.IComplaintService;


global IComplaintService complaintService;


rule "10 complaints for package in 24 hours"
    when
    $c: Complaint(
        $packages: packages
        )
        Number(intValue == 10) from accumulate(
                $c2: Complaint(
                this != $c,
                packages.id == $packages.id,
                $c2 after[0s, 24h] $c
                ),
            count($c2)
        )
    then
        System.out.println("Alerting admin: 10 complaints received for package " + $packages.getId() + " in 24 hours");
end

rule "50 complaints for package in 24 hours"
    when
    $c: Complaint(
        $packages: packages
        )
        Number(intValue == 50) from accumulate(
                $c2: Complaint(
                this != $c,
                packages.id == $packages.id,
                $c2 after[0s, 24h] $c
                ),
            count($c2)
        )
    then
        System.out.println("Alerting admin: 50 complaints received for package " + $packages.getId() + " in 24 hours\nTaking package off offers.");
        modify($packages) { setInOfferFlag(false) }
end

// sama obrada zalbi
rule "comlaint for premium user"
    no-loop
    salience 10
    when
    $c: Complaint(
        processed == false,
        client.premium == true,
        complaintMsg != "",
        $packag: packages
    )
    $p: Packages(
    packageType == $packag.packageType,
    id != $packag.id)
    not (Packages(parent != null, parent.name == $p.name))
    then
    modify($c){ setProcessed(true)};
    System.out.println("comlaint for premium user");
    complaintService.handlePackageRecommendation($p);
//    recomend = $p.copy();
//    update(recomend)
end

rule "comlaint for non-premium user"
    no-loop
    when
    $c: Complaint(
        processed == false,
        client.premium == false,
        complaintMsg != "",
        $packag: packages
    )
    $p: Packages(
    packageType == $packag.packageType,
    id != $packag.id)
    not (Packages( parent != null, parent.name == $p.name))
    then
    modify($c){ setProcessed(true)};
    System.out.println("comlaint for non premium user " + $p.getName() + " " + $p.getPackageType());
    complaintService.handlePackageRecommendation($p);
end

rule "comlaint with recomendation"
    when
    $c: Complaint(
        recommendation != "",
        $packag: packages
    )
    then
    System.out.println($c.getRecommendation());
end